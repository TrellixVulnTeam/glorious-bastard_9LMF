{"ast":null,"code":"import { carObjF, carObj } from '../../shared/examples/cars';\nimport { barObjF, barObj } from '../../shared/examples/bars';\nimport { personObjF, personObj } from '../../shared/examples/persons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/validation-data.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction ValidationComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nexport let ValidationComponent = /*#__PURE__*/(() => {\n  class ValidationComponent {\n    constructor(validationDataService) {\n      this.validationDataService = validationDataService;\n      this.validation = new Array();\n    }\n\n    ngOnInit() {}\n\n    validateObjects() {\n      const car = this.validationDataService.getCars(carObj); // this.validation[0].message = car.ok.toString();\n\n      console.log(\"Validation for carObj:\");\n      console.log(car.ok);\n      const carF = this.validationDataService.getCars(carObjF);\n      console.log(\"Validation for carObj:\");\n      console.log(carF);\n      const bar = this.validationDataService.getBars(barObj);\n      console.log(\"Validation for barObj:\");\n      console.log(bar);\n      const barF = this.validationDataService.getBars(barObjF);\n      console.log(\"Validation for barObjF:\");\n      console.log(barF);\n      const person = this.validationDataService.getPersons(personObj);\n      console.log(\"Validation for personObj:\");\n      console.log(person);\n      const personF = this.validationDataService.getPersons(personObjF);\n      console.log(\"Validation for personObjF:\");\n      console.log(personF);\n    }\n\n  }\n\n  ValidationComponent.ɵfac = function ValidationComponent_Factory(t) {\n    return new (t || ValidationComponent)(i0.ɵɵdirectiveInject(i1.ValidationDataService));\n  };\n\n  ValidationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ValidationComponent,\n    selectors: [[\"app-validation\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"]],\n    template: function ValidationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"validation works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, ValidationComponent_div_2_Template, 1, 0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.validation);\n      }\n    },\n    directives: [i2.NgForOf],\n    styles: [\"\"]\n  });\n  return ValidationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}